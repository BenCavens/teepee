

@function calculateRem($size,$base: 16px) {
  $remSize: $size / $base;
  @return $remSize * 1rem;
}

// Polyfill for rem.
// IE10 and below do not support rem so pixel fallback must be provided
// http://caniuse.com/#search=rem
@mixin rem2px($property, $size: 1.6, $base:""){
  @if $base == "" { $base: $font-size-base-number; }
  #{$property}: ($size * $base) + px;
  #{$property}: $size + rem;
}

// Polyfill for em.
// IE9, IE8 and Opera mini do not support em
// http://caniuse.com/#search=em
@mixin em2px($property, $size: 1,$base:""){
  @if $base == "" { $base: $font-size-base-number; }
  #{$property}: ($size * $base) + px;
  #{$property}: $size + em;
}

@mixin bottomFade($hex){
  background:linear-gradient(to bottom, rgba($hex,1),rgba($hex,0.4));
  text-shadow: 0 1px 0 $hex;
}

@mixin leftFade($hex){
  background:linear-gradient(to right, rgba($hex,1),rgba($hex,0));
  text-shadow: 0 1px 0 $hex;
}

// VERTICAL ALIGNMENT WITHIN CONTAINER
@mixin vertical-center($position: relative) {
  position: $position;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}

// Use the preserve-3d for the parent for the vertical align to maintain proper rendering.
@mixin vertical-center-container(){
  position:relative;
  -webkit-transform-style: preserve-3d;
  -moz-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

// Viewport sizes
$tablet-min-width: 768px;
$desktop-min-width: 1024px;
$widescreen-min-width: 1440px;

@mixin phone{
  @media (max-width: #{$tablet-min-width - 1px}){
    @content;
  }
}

@mixin tablet{
  @media (min-width: #{$tablet-min-width}) and (max-width:#{$desktop-min-width - 1px}){
    @content;
  }
}

/* Mobile means everything smaller than desktop */
@mixin mobile{
  @media (max-width:#{$desktop-min-width - 1px}){
    @content;
  }
}

@mixin desktop{
  @media (min-width: #{$desktop-min-width}){
    @content;
  }
}

@mixin widescreen{
  @media (min-width: #{$widescreen-min-width}){
    @content;
  }
}